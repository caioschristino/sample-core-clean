<?xml version="1.0" encoding="UTF-8"?>
<issues format="6" by="lint 8.0.0-alpha02" type="baseline" client="gradle" dependencies="false" name="AGP (8.0.0-alpha02)" variant="all" version="8.0.0-alpha02">

    <issue
        id="LintError"
        message="Unexpected failure during lint analysis of LandingViewModel.kt (this is a bug in lint or one of the libraries it depends on)&#xA;&#xA;&#xA;The crash seems to involve the detector `androidx.lifecycle.lint.NonNullableMutableLiveDataDetector`.&#xA;You can try disabling it with something like this:&#xA;    android {&#xA;        lint {&#xA;            disable &quot;NullSafeMutableLiveData&quot;&#xA;        }&#xA;    }&#xA;&#xA;Stack: `NullPointerException:NonNullableMutableLiveDataDetector$createUastHandler$1.visitCallExpression(NonNullableMutableLiveDataDetector.kt:125)←UElementVisitor$DispatchPsiVisitor.visitCallExpression(UElementVisitor.kt:523)←UElementVisitor$DelegatingPsiVisitor.visitCallExpression(UElementVisitor.kt:1071)←KotlinUFunctionCallExpression.accept(KotlinUFunctionCallExpression.kt:165)←ImplementationUtilsKt.acceptList(implementationUtils.kt:15)←UBlockExpression$DefaultImpls.accept(UBlockExpression.kt:21)←KotlinUBlockExpression.accept(KotlinUBlockExpression.kt:12)←ULambdaExpression$DefaultImpls.accept(ULambdaExpression.kt:41)←KotlinULambdaExpression.accept(KotlinULambdaExpression.kt:12)←ImplementationUtilsKt.acceptList(implementationUtils.kt:15)←KotlinUFunctionCallExpression.accept(KotlinUFunctionCallExpression.kt:169)←ImplementationUtilsKt.acceptList(implementationUtils.kt:15)←UBlockExpression$DefaultImpls.accept(UBlockExpression.kt:21)←KotlinUBlockExpression.accept(KotlinUBlockExpression.kt:12)←UMethod$DefaultImpls.accept(UMethod.kt:45)←KotlinUMethod.accept(KotlinUMethod.kt:18)←ImplementationUtilsKt.acceptList(implementationUtils.kt:15)←AbstractKotlinUClass.accept(AbstractKotlinUClass.kt:46)←ImplementationUtilsKt.acceptList(implementationUtils.kt:15)←UFile$DefaultImpls.accept(UFile.kt:91)←KotlinUFile.accept(KotlinUFile.kt:15)←UastLintUtilsKt.acceptSourceFile(UastLintUtils.kt:526)←UElementVisitor$visitFile$3.run(UElementVisitor.kt:274)←LintClient.runReadAction(LintClient.kt:1803)←LintDriver$LintClientWrapper.runReadAction(LintDriver.kt:2826)←UElementVisitor.visitFile(UElementVisitor.kt:271)←LintDriver$visitUastDetectors$1.run(LintDriver.kt:2123)←LintClient.runReadAction(LintClient.kt:1803)←LintDriver$LintClientWrapper.runReadAction(LintDriver.kt:2826)←LintDriver.visitUastDetectors(LintDriver.kt:2123)←LintDriver.visitUast(LintDriver.kt:2082)←LintDriver.runFileDetectors(LintDriver.kt:1431)←LintDriver.checkProject(LintDriver.kt:1195)←LintDriver.checkProjectRoot(LintDriver.kt:655)←LintDriver.access$checkProjectRoot(LintDriver.kt:162)←LintDriver$analyzeOnly$1.invoke(LintDriver.kt:466)←LintDriver$analyzeOnly$1.invoke(LintDriver.kt:459)←LintDriver.doAnalyze(LintDriver.kt:526)←LintDriver.analyzeOnly(LintDriver.kt:459)←LintCliClient$analyzeOnly$1.invoke(LintCliClient.kt:247)←LintCliClient$analyzeOnly$1.invoke(LintCliClient.kt:247)←LintCliClient.run(LintCliClient.kt:289)←LintCliClient.run$default(LintCliClient.kt:272)←LintCliClient.analyzeOnly(LintCliClient.kt:247)←Main.run(Main.java:1668)←Main.run(Main.java:274)←NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-2)←NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)←DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)←Method.invoke(Method.java:566)←AndroidLintWorkAction.invokeLintMainRunMethod(AndroidLintWorkAction.kt:96)←AndroidLintWorkAction.runLint(AndroidLintWorkAction.kt:85)←AndroidLintWorkAction.execute(AndroidLintWorkAction.kt:61)←DefaultWorkerServer.execute(DefaultWorkerServer.java:63)←NoIsolationWorkerFactory$1$1.create(NoIsolationWorkerFactory.java:66)←NoIsolationWorkerFactory$1$1.create(NoIsolationWorkerFactory.java:62)←ClassLoaderUtils.executeInClassloader(ClassLoaderUtils.java:100)←NoIsolationWorkerFactory$1.lambda$execute$0(NoIsolationWorkerFactory.java:62)←AbstractWorker$1.call(AbstractWorker.java:44)←AbstractWorker$1.call(AbstractWorker.java:41)←DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:204)←DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:199)←DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:66)←DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:59)←DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:157)←DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:59)←DefaultBuildOperationRunner.call(DefaultBuildOperationRunner.java:53)←DefaultBuildOperationExecutor.call(DefaultBuildOperationExecutor.java:73)←AbstractWorker.executeWrappedInBuildOperation(AbstractWorker.java:41)←NoIsolationWorkerFactory$1.execute(NoIsolationWorkerFactory.java:59)←DefaultWorkerExecutor.lambda$submitWork$2(DefaultWorkerExecutor.java:205)←FutureTask.run(FutureTask.java:264)←DefaultConditionalExecutionQueue$ExecutionRunner.runExecution(DefaultConditionalExecutionQueue.java:187)←DefaultConditionalExecutionQueue$ExecutionRunner.access$700(DefaultConditionalExecutionQueue.java:120)←DefaultConditionalExecutionQueue$ExecutionRunner$1.run(DefaultConditionalExecutionQueue.java:162)←Factories$1.create(Factories.java:31)←DefaultWorkerLeaseService.withLocks(DefaultWorkerLeaseService.java:249)←DefaultWorkerLeaseService.runAsWorkerThread(DefaultWorkerLeaseService.java:109)←DefaultWorkerLeaseService.runAsWorkerThread(DefaultWorkerLeaseService.java:114)←DefaultConditionalExecutionQueue$ExecutionRunner.runBatch(DefaultConditionalExecutionQueue.java:157)←DefaultConditionalExecutionQueue$ExecutionRunner.run(DefaultConditionalExecutionQueue.java:126)←Executors$RunnableAdapter.call(Executors.java:515)←FutureTask.run(FutureTask.java:264)←ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64)←ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:48)←ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)←ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)←Thread.run(Thread.java:829)`&#xA;&#xA;You can run with --stacktrace or set environment variable `LINT_PRINT_STACKTRACE=true` to dump a full stacktrace to stdout.">
        <location
            file="src/main/java/com/v2/sample/clean/plugin/feature/landing/gateway/LandingViewModel.kt"/>
    </issue>

    <issue
        id="GradleDependency"
        message="A newer version of androidx.core:core-ktx than 1.8.0 is available: 1.9.0"
        errorLine1="    implementation &apos;androidx.core:core-ktx:1.8.0&apos;"
        errorLine2="                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="build.gradle"
            line="52"
            column="20"/>
    </issue>

    <issue
        id="ObsoleteSdkInt"
        message="This folder configuration (`v24`) is unnecessary; `minSdkVersion` is 24. Merge all the resources in this folder into `drawable`.">
        <location
            file="src/main/res/drawable-v24"/>
    </issue>

    <issue
        id="MergeRootFrame"
        message="This `&lt;FrameLayout>` can be replaced with a `&lt;merge>` tag"
        errorLine1="&lt;FrameLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2="^">
        <location
            file="src/main/res/layout/activity_main.xml"
            line="2"
            column="1"/>
    </issue>

    <issue
        id="HardcodedText"
        message="Hardcoded string &quot;MainFragment&quot;, should use `@string` resource"
        errorLine1="        android:text=&quot;MainFragment&quot;"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/res/layout/fragment_main.xml"
            line="14"
            column="9"/>
    </issue>

</issues>
